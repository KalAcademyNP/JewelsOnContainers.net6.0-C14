version: '3.4'

networks:
  frontend:
  backend:

services:
  catalog:
    image: jewels/catalogapi
    build:
      context: .\ProductCatalogAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=mssqlserver;Initial Catalog=CatalogDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;"
      ExternalBaseUrl: http://localhost:7000
    ports:
      - "7000:80"
    container_name: jewelscatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  tokenserver:
    image: jewels/tokenapi
    build:
      context: .\TokenServiceAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=tokensqlserver;Initial Catalog=TokenServiceDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;"
      MvcClient: http://localhost:7500
    ports:
      - "7800:80"
    container_name: jewelstokenapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokensqlserver

  cart:
    image: jewels/cartapi
    build:
      context: .\CartApi
      dockerfile: Dockerfile
    environment:
      IdentityUrl: http://192.168.1.109:7800
      ConnectionString: basket.data
    ports:
      - "7010:80"
    container_name: jewelscartapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - basket.data

  order:
    image: jewels/orderapi
    build:
      context: .\OrderApi
      dockerfile: Dockerfile
    environment:
      IdentityUrl: http://192.168.1.109:7800
      ConnectionString: "Data Source=ordersqlserver;Initial Catalog=OrdersDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;"
    ports:
      - "7020:80"
    container_name: jewelsorderapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - ordersqlserver

  webmvc:
    image: jewels/webmvc
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://catalog
      IdentityUrl: http://192.168.1.109:7800
      CallBackUrl: http://localhost:7500
      CartUrl: http://cart
      OrderUrl: http://order
      StripePublicKey: pk_test_jZlpubvlPmcV6QJPReImelQy
      StripePrivateKey: sk_test_bSHT9qxwjpyCOP0qdAvHLfAA
    ports:
      - "7500:80"
    container_name: webshop
    networks:
      - frontend
    depends_on:
      - catalog
      - tokenserver
      - cart
      - order

  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ProductApi123(!)
      SA_PASSWORD: ProductApi123(!)
    ports:
      - "1449:1433"
    container_name: jewelssqlserver
    networks:
      - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ProductApi123(!)
      SA_PASSWORD: ProductApi123(!)
    ports:
      - "1448:1433"
    container_name: jewelstokensqlserver
    networks:
      - backend

  ordersqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi123(!)
    ports:
      - "1450:1433"
    container_name: jewelsordersqlserver
    networks:
      - backend

  basket.data:
    image: redis
    ports:
      - "7050:6379"
    container_name: basketdata
    networks:
      - backend